name: Compilar, probar y subir a producción

on:
  push:
    branches:
      - main

env:
  SQLX_OFFLINE: true
  DATABASE_URL: ${{ secrets.DATABASE_TEST_URL }}

jobs:
  build:
    runs-on: ubuntu-latest
    
    services:
      mysql:
        image: mysql:latest
        env:
          MYSQL_DATABASE: cochinillos
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
        ports:
          - 3306:3306

    steps:
    - name: Checkout codigo
      uses: actions/checkout@v4
      with:
        sparse-checkout: |
          codigo/cochinillos-voladores/*
    
    - name: Comprobar archivos
      run: ls
    
    - name: Instalar rust
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable

    - name: Install SQLx CLI
      run: cargo install sqlx-cli --no-default-features --features native-tls,mysql

    - name: Run SQLx Database Migrations
      run: sqlx migrate run

    - name: Generate SQLX Prepared Queries
      run: cargo sqlx prepare

    - name: Compilar y probar codigo
      run: |
          cargo build --verbose
          cargo test --verbose

    - name: Configurar Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Iniciar sesión en docker
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Compilar y subir imagen docker
      uses: docker/bake-action@v4
      with:
        push: true

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout codigo
      uses: actions/checkout@v4
      with:
        sparse-checkout: |
          codigo/cochinillos-voladores/*

    - name: Iniciar sesión en docker
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Instalar sshpass
      run: sudo apt-get install sshpass

    - name: Copiar Caddyfile
      run: sshpass -v -p ${{ secrets.DROPLET_PASSWORD }} scp -o StrictHostKeyChecking=no Caddyfile root@${{ vars.DROPLET_IP }}:~

    - name: Copiar docker-compose.yml
      run: sshpass -v -p ${{ secrets.DROPLET_PASSWORD }} scp -o StrictHostKeyChecking=no docker-compose.yml root@${{ vars.DROPLET_IP }}:~

    - name: Copiar docker-compose.prod.yml
      run: sshpass -v -p ${{ secrets.DROPLET_PASSWORD }} scp -o StrictHostKeyChecking=no docker-compose.prod.yml root@${{ vars.DROPLET_IP }}:~

    - name: Deploy
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ vars.DROPLET_IP }}
        username: root
        password: ${{ secrets.DROPLET_PASSWORD }}
        script: |
          cd ~
          export MYSQL_PASSWORD=${{ secrets.MYSQL_PASSWORD }}
          docker compose down
          docker compose pull
          docker compose -f docker-compose.yml -f docker-compose.prod.yml up -d
